AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  ApiId:
    Type: String
  RouteKey:
    Type: String
  GitShaParameter:
    Type: String  
  BucketNameParameter:
    Type: String
  SharedLayer:
    Type: String
  FunctionName:
    Type: String
  ConnectionsTable:
    Type: String
    Default: ''

Transform: 'AWS::Serverless-2016-10-31'

Resources:
  Route:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref ApiId
      RouteKey: !Ref RouteKey
      Target: !Join ['/', ['integrations', !Ref Integration]]
  Integration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref ApiId
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${Function.Arn}/invocations
  Function:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: index.handler
      Runtime: nodejs8.10
      AutoPublishAlias: !Ref GitShaParameter
      FunctionName: !Ref FunctionName
      Environment:
        Variables:
          CONNECTIONS_TABLE_NAME: !Ref ConnectionsTable
      CodeUri:
        Bucket: !Ref BucketNameParameter
        Key: !Sub '${GitShaParameter}/wss/${FunctionName}/app.zip'
      Layers:
        - !Ref SharedLayer
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref ConnectionsTable
      - DynamoDBStreamReadPolicy:
          TableName: !Ref ConnectionsTable
          StreamName: '*'
      - Statement:
        - Effect: Allow
          Action:
          - 'execute-api:ManageConnections'
          Resource:
          - !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiId}/*'
  Permission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref Function
      Principal: apigateway.amazonaws.com

Outputs:
  Function:
    Value: !Ref Function
